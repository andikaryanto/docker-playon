version: '3'
services:    
    nginx:
        container_name: docker-playon-nginx
        build: ${NGINX_BUILD}
        volumes:
            - ${NGINX_CONFIG_ROOT}/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ${NGINX_CONFIG_ROOT}/etc/nginx/conf.d:/etc/nginx/conf.d
            - ${NGINX_CONFIG_ROOT}/etc/nginx/sites-available:/etc/nginx/sites-enabled
            - vnn_php:/var/www/
        ports:
            - "8082:8080"
            - "8083:8083"
        restart: always
        depends_on:
            - php 
        networks: 
            nginx_mysql_php_network:
                ipv4_address: 192.17.0.2
    php:
        container_name: docker-playon-php
        build: ${PHP_BUILD}
        restart: always
        volumes:
            - vnn_php:/var/www/     
            - ${PHP_FPM_CONFIG_ROOT}/usr/local/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ${PHP_FPM_CONFIG_ROOT}/usr/local/etc/php/conf.d/php.ini:/usr/local/etc/php/conf.d/custom.ini
            - ${SSH_KEYS}:/root/.ssh
        ports:
            - "9909:9000"
        extra_hosts:
            - "api.localhost:192.17.0.2"
        networks:
            nginx_mysql_php_network:
                ipv4_address: 192.17.0.3
    mysql8:
        container_name: docker-playon-mysql
        image: mysql:8.0
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: true
        #     MYSQL_ROOT_PASSWORD: 
        restart: always
        volumes:
            - vnn_mysql8:/var/lib/mysql
        ports:
            - "3368:3306"
        networks:
            nginx_mysql_php_network:
                ipv4_address: 192.17.0.5
    haproxy:
        container_name: docker-playon-haproxy
        build: ${HAPROXY_BUILD}
        restart: always
        volumes:
            - ${HAPROXY_CONFIG_ROOT}/etc/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
        ports:
            - "8081:80"
        extra_hosts:
            - "sportshub3.localhost:192.17.0.2"
        depends_on:
            - nginx
        networks:
            nginx_mysql_php_network:
                ipv4_address: 192.17.0.6
    varnish:
        container_name: docker-playon-varnish
        build: ${VARNISH_BUILD}
        restart: always
        volumes:
            - ${VARNISH_CONFIG_ROOT}/etc/varnish/default.vcl:/etc/varnish/default.vcl
        ports:
            - "8080:80"
        depends_on:
            - haproxy
        networks:
            nginx_mysql_php_network:    
                ipv4_address: 192.17.0.7
    redis:
        image: redis:7.2.6-alpine
        restart: always
        container_name: docker-playon-redis
        ports:
            - "6379:6379"
        networks:
            nginx_mysql_php_network:
                ipv4_address: 192.17.0.8
    rabbitmq:
        image: rabbitmq:4-management-alpine
        restart: always
        container_name: docker-playon-rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        networks:
            nginx_mysql_php_network:
                ipv4_address: 192.17.0.9
    amazoncorretto:        
        container_name: docker-playon-amazoncorretto
        build: ${AMAZON_CORRETO_BUILD}
        ports:
            - "8090:8090"
        environment:
            - MAVEN_USER=${MAVEN_USER}
            - MAVEN_PASSWORD=${MAVEN_PASSWORD}
        volumes:
            - vnn_java:/Users/Shared/allstar
            - ${SSH_KEYS}:/root/.ssh
        #     - ${CORRETTO_CONFIG_ROOT}/conf/logging.properties:/opt/jdk-17/conf/logging.properties
        networks:
            nginx_mysql_php_network:
                ipv4_address: 192.17.0.10
volumes:
    vnn_java:
    vnn_mysql8:
    vnn_php:

networks:
  nginx_mysql_php_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.17.0.0/24